---
interface Props {
	title: string;
	year: string;
	body: string;
	href: string;
	cover: string;
}

const { href, title, year, body, cover } = Astro.props;

const albumSongs = [["Uninhabitable", "Temple of Higgs", "Late Stage Capitalism Blues"],
					["Hooked", "Nothing", "Swamped"],
					["Junk", "Fart", "Poooooop"],
					["Ungh", "Tessst", "Dummmb"]
]

// foreach i of 

// var songList = [];

// albumSongs.forEach((list) => {
// 	songList = list;
// });

// for (let i = 0; i < albumSongs.length; i++) {
// 	var songList = albumSongs[i];
// }

---

<li class="link-card">
	<a href={href}>
		<h2>
			<img src={cover}>
				<ol class="song-list">
					{albumSongs.map((song) => <li>{song}</li>)}
				</ol>
				<div class="title-container">
					<div class="album-title">
						{title}
					</div>
					<div class="album-year">
						{year}
					</div>
				</div>
		</h2>
		<p>
			{body}
		</p>
	</a>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	.song-list {
		float: right;
		font-size: .5rem;
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		font-size: .8rem;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style>
